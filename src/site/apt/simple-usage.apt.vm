 ------
 Apache DirectMemory Simple Usage
 ------
 Olivier Lamy
 ------
 2012-10-03
 ------

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

DirectMemory Simple Usage


  Add a dependency to the DirectMemory cache artifact:

+------------------------
  <dependency>
    <groupId>org.apache.directmemory.server</groupId>
    <artifactId>directmemory-cache</artifactId>
    <version>${currentRelease}</version>
  </dependency>
+------------------------

  Create your {{{./apidocs/reference/org/apache/directmemory/cache/CacheService.html}CacheService}} instance:

+------------------------
  CacheService<Object, Object> cacheService = new DirectMemory<Object, Object>()
    .setNumberOfBuffers( 10 )
    .setSize( 1000 )
    .setInitialCapacity( 100000 )
    .setConcurrencyLevel( 4 )
    .newCacheService();
+------------------------

  Use the cache service to store object, Those methods returns a {{{./apidocs/reference/org/apache/directmemory/memory/Pointer.html}Pointer}} if this pointer is null your object has not been stored:

+------------------------
  put( K key, V value )
  put( K key, V value, int expiresIn )
+------------------------

  Retrieve an Object from the cache service:

+------------------------
  V retrieve( K key );
+------------------------

  Clear at the end of usage and close the CacheService

+------------------------
  cacheService.clear();
  cacheService.close();
+------------------------


